{"version":3,"sources":["components/Header/index.jsx","store/reducers/cases.js","components/Shared/TabNavigation.jsx","components/Shared/Message.jsx","components/Shared/AlertBar.jsx","components/Shared/AlertBarLoading.jsx","components/Counter/index.jsx","components/About/index.jsx","components/Home/component.jsx","components/Home/index.js","App.js","store/reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","className","role","aria-label","href","id","initialState","infected","deceased","recovered","tested","loading","lastUpdate","casesReducer","state","type","payload","lastUpdatedAtApify","TabNavigation","props","activeTab","onClick","tabChange","aria-hidden","messageTypes","Message","message","title","alertTypes","AlertBar","AlertBarLoading","Counter","fetchCases","Fragment","About","Home","handleTabChange","tab","setState","this","nextProps","nextState","Component","connect","date","Date","case","toGMTString","dispatch","a","fetch","method","headers","response","json","data","App","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a68a3cdc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <nav className=\"navbar is-fixed-top is-link\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/\">\n                    Covid-19 Ph Counter\n                </a>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                \n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import fetch from 'node-fetch';\nconst url = 'https://api.apify.com/v2/key-value-stores/lFItbkoNDXKeSWBBA/records/LATEST?disableRedirect=true';\nconst ATTEMPT_FETCH_CASES = 'ATTEMPT_FETCH_CASES';\nconst SUCCEED_FETCH_CASES = 'SUCCEED_FETCH_CASES';\nconst FAILED_FETCH_CASES = 'FAILED_FETCH_CASES';\n\n\nexport const fetchCases = () => {\n    return async dispatch => {\n        dispatch({\n            type: ATTEMPT_FETCH_CASES,\n        });\n        const response = await fetch(url, {method: 'get', headers: {'Accept': 'application/json'}});\n        const data = await response.json();\n        dispatch({\n            type: SUCCEED_FETCH_CASES,\n            payload: data,\n        });\n    } \n}\n\n\n\nconst initialState = {\n    infected: 0,\n    deceased: 0,\n    recovered: 0,\n    tested: 0,\n    loading: false,\n    lastUpdate: \"\",\n}\n\nconst casesReducer = (state = initialState, {type, payload}) => {\n\n    switch(type) {\n        case ATTEMPT_FETCH_CASES: {\n            state = {\n                ...state,\n                loading: true,\n            }\n            break;\n        }\n        case FAILED_FETCH_CASES: {\n            state = {\n                ...state,\n                loading: false,\n            }\n            break;\n        }\n        case SUCCEED_FETCH_CASES: {\n            state = {\n                ...state,\n                infected: payload.infected,\n                tested: payload.tested,\n                recovered: payload.recovered,\n                deceased: payload.deceased,\n                lastUpdate: payload.lastUpdatedAtApify,\n                loading: false,\n            }\n            break;\n        }\n        default: {\n            return state;\n        }\n    }\n\n    return state;\n} \n\nexport default casesReducer;\n\n","import React from 'react';\n\nconst TabNavigation = (props) => {\n    return (\n        <div className=\"tabs is-toggle is-fullwidth\">\n            <ul>\n                <li \n                    className={`${props.activeTab === 'counter' ? 'is-active' : ''}`} \n                    onClick={() => props.tabChange('counter')}\n                >\n                    <a href=\"/#\">\n                        <span className=\"icon is-small\"><i className=\"fa fa-dashboard\" aria-hidden=\"true\"></i></span>\n                        <span>Dashboard</span>\n                    </a>\n                </li>\n                <li \n                    className={`${props.activeTab === 'about' ? 'is-active' : ''}`} \n                    onClick={() => props.tabChange('about')}\n                >\n                    <a href=\"/#\">\n                        <span className=\"icon is-small\"><i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i></span>\n                        <span>About</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default TabNavigation;","import React from 'react';\n\nconst messageTypes = {\n    'warning': 'is-warning',\n    'danger': 'is-danger',\n    'success': 'is-success',\n    'info': 'is-info'\n}\n\n\nconst Message = ({message, type, title}) => {\n    return (\n        <article className={`message ${messageTypes[type]}`}>\n            <div className=\"message-header\">\n                <p>{title}</p>\n            </div>\n            <div className=\"message-body\">\n                <p className=\"align-center\">{message}</p>\n            </div>\n        </article>\n    )\n}\n\nexport default Message;","import React from 'react';\n\nconst alertTypes = {\n    'warning': 'is-warning',\n    'danger': 'is-danger',\n    'success': 'is-success',\n    'info': 'is-info'\n}\n\nconst AlertBar = ({title, type}) => {\n    return (\n        <article className={`message ${alertTypes[type]}`}>\n            <div className=\"message-header\">\n                <p>{title}</p>\n            </div>\n        </article>\n    )\n}\n\nexport default AlertBar;","import React from 'react';\n\nconst AlertBarLoading = () => {\n    return(\n        <article className={'message is-info'}>\n            <div className=\"message-header\">\n                <p>\n                    Fetching Data\n                </p>\n                <br/><br/>\n                <p><i className=\"fa fa-spinner fa-spin fa-2x\"></i></p>\n            </div>\n        </article>\n    )\n}\n\nexport default AlertBarLoading;","import React from 'react';\nimport Message from '../Shared/Message';\nimport AlertBar from '../Shared/AlertBar';\nimport AlertBarLoading from '../Shared/AlertBarLoading';\n\nconst Counter = ({\n    loading,\n    lastUpdate,\n    infected,\n    deceased,\n    recovered,\n    tested,\n    fetchCases\n}) => {\n    return (\n        <React.Fragment>\n        {\n            loading ?\n                <AlertBarLoading/>\n            : (\n                <React.Fragment>\n                    <AlertBar title={`Data as of ${lastUpdate}`} type=\"info\" />\n                    <section className=\"columns\">\n                        <div className=\"column\">\n                            <Message type={'warning'} title=\"Confirmed Cases\" message={infected} />\n                        </div>\n                        <div className=\"column\">\n                            <Message type={'danger'} title=\"Deceased\" message={deceased} />\n                        </div>\n                        <div className=\"column\">\n                            <Message type={'success'} title=\"Recovered\" message={recovered} />\n                        </div>\n                        <div className=\"column\">\n                            <Message type={'info'} title=\"Tested\" message={tested} />\n                        </div>\n                        \n                    </section>\n                    <button \n                            onClick={fetchCases} \n                            className=\"refresh-button button is-primary is-fullwidth\"\n                        >\n                            Reload Data\n                        </button>\n                </React.Fragment>\n            )    \n        }\n        </React.Fragment>\n    )\n}\n\nexport default Counter;","import React from 'react';\n\nconst About = () => {\n    return (\n        <React.Fragment>\n            <article className={`message is-info`}>\n                <div className=\"message-header\">\n                    <p>App About</p>\n                </div>\n                <div className=\"message-body\">\n                    Simple tracker of infected victims of the Covid-19\n                    <br/>\n                    Data source: <a href=\"https://apify.com/covid-19\">apify.com</a>\n                </div>\n            </article>\n            <article className={`message is-info`}>\n                <div className=\"message-header\">\n                    <p>Developer</p>\n                </div>\n                <div className=\"message-body\">\n                    Arvin Kenn L. delos Santos\n                    <br/>\n                    Full Stack Web Developer\n                </div>\n            </article>\n        </React.Fragment>\n    );\n}\n\nexport default About;","import React, {Component} from 'react';\nimport TabNavigation from '../Shared/TabNavigation';\nimport Counter from '../Counter';\nimport About from '../About';\n\nclass Home extends Component {\n\n    state = {\n        activeTab: 'counter'\n    }\n\n\n    componentDidMount(){\n        this.props.fetchCases();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.loading !== this.props.loading ||\n                nextState.activeTab !== this.state.activeTab;\n    }\n\n    render() {\n        const {activeTab} = this.state;\n        return (\n            <main className=\"main\">\n                <TabNavigation activeTab={activeTab} tabChange={this.handleTabChange} />\n                {activeTab === 'counter' && <Counter {...this.props}  />}\n                {activeTab === 'about' && <About />}\n            </main>\n        )\n    }\n\n    handleTabChange = (tab) => {\n        this.setState({\n            activeTab: tab\n        });\n    }\n}\n\nexport default Home;","import {connect} from 'react-redux';\nimport {fetchCases} from '../../store/reducers/cases';\nimport Home from './component';\n\nconst mapState = (state) => {\n    const date =  new Date(state.case.lastUpdate);\n    return {\n        infected: state.case.infected,\n        deceased: state.case.deceased,\n        recovered: state.case.recovered,\n        tested: state.case.tested,\n        lastUpdate: state.case.lastUpdate !== \"\" ? date.toGMTString() : \"\",\n        loading: state.case.loading,\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return {\n        fetchCases: () => dispatch(fetchCases()),\n    }\n}\n\n\nexport default connect(mapState, mapDispatch)(Home)\n","import React from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport 'bulma/css/bulma.css';\nimport './theme.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Home />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport casesReducer from './cases';\n\nconst rootReducer = combineReducers({\n    case: casesReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n \nimport rootReducer from './reducers/index';\n\n\n\n//const persistedState = loadFromLocalStorage()\n//const sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst store =  createStore(\n    rootReducer,\n    //persistedState,\n    composeEnhancers(applyMiddleware(thunk)),\n);\n\n\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}